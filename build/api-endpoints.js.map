{"version":3,"file":"api-endpoints.js","sourceRoot":"","sources":["../src/api-endpoints.ts"],"names":[],"mappings":";;;AAAA,IAAY,SAOX;AAPD,WAAY,SAAS;IACnB,4BAAe,CAAA;IACf,6BAAgB,CAAA;IAChB,0BAAa,CAAA;IACb,0BAAa,CAAA;IACb,4BAAe,CAAA;IACf,wBAAW,CAAA;AACb,CAAC,EAPW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAOpB;AAQD,IAAY,MAKX;AALD,WAAY,MAAM;IAChB,qBAAW,CAAA;IACX,uBAAa,CAAA;IACb,yBAAe,CAAA;IACf,0BAAgB,CAAA;AAClB,CAAC,EALW,MAAM,GAAN,cAAM,KAAN,cAAM,QAKjB;AAsBD,IAAY,aAKX;AALD,WAAY,aAAa;IACvB,gDAA+B,CAAA;IAC/B,0CAAyB,CAAA;IACzB,sCAAqB,CAAA;IACrB,sCAAqB,CAAA;AACvB,CAAC,EALW,aAAa,GAAb,qBAAa,KAAb,qBAAa,QAKxB;AA8BY,QAAA,qBAAqB,GAAG;IACnC,MAAM,EAAE,MAAM,CAAC,IAAI;IACnB,UAAU,EAAE,EAAE;IACd,WAAW,EAAE,EAAE;IACf,UAAU,EAAE;QACV,mBAAmB;QACnB,UAAU;QACV,oBAAoB;QACpB,QAAQ;QACR,eAAe;QACf,aAAa;KACd;IACD,IAAI,EAAE,GAAW,EAAE,CAAC,iCAAiC;CAC7C,CAAA;AAMG,QAAA,kBAAkB,GAAG;IAChC,MAAM,EAAE,MAAM,CAAC,GAAG;IAClB,UAAU,EAAE,CAAC,WAAW,CAAC;IACzB,WAAW,EAAE,EAAE;IACf,UAAU,EAAE,EAAE;IACd,IAAI,EAAE,CAAC,CAA2B,EAAU,EAAE,CAC5C,mCAAmC,CAAC,CAAC,SAAS,EAAE;CAC1C,CAAA","sourcesContent":["export enum ILogLevel {\n  TRACE = 'TRACE',\n  DEBUG = ' DEBUG',\n  INFO = 'INFO',\n  WARN = 'WARN',\n  ERROR = 'ERROR',\n  OFF = 'OFF',\n}\n\nexport interface ClientOptions {\n  auth?: string\n  timeoutMs?: number\n  logLevel?: ILogLevel\n}\n\nexport enum Method {\n  GET = 'get',\n  POST = 'post',\n  PATCH = 'patch',\n  DELTE = 'delete',\n}\n\nexport type AvatarType = 'heygen' | 'azure' | 'custom'\n\nexport type VerificationParam = {\n  key: string\n  isRequired?: boolean\n  description?: string\n  value?: string | null\n}\n\nexport type GeteSessionParameters = {\n  sessionId: string\n}\n\nexport type Phrase = {\n  id: string\n  createdAt: number\n  text: string\n  isAvatar: boolean\n}\n\nexport enum SessionStatus {\n  RequiresInput = 'requiresInput',\n  Processing = 'processing',\n  Canceled = 'canceled',\n  Complete = 'complete',\n}\n\nexport type GetSessionResponse = {\n  id: string\n  createdAt: number\n  startedAt?: number\n  finishedAt?: number\n  transcript: Phrase[]\n  status: SessionStatus\n  params: CreateSessionParameters\n  version?: string\n  data: Record<string, string>\n}\n\nexport type CreateSessionParameters = {\n  clientReferenceId: string\n  metadata: object\n  verificationParams: VerificationParam[]\n  avatar?: AvatarType\n  initialPhrase?: string\n  finalPhrase?: string\n  providedData?: Record<string, string>\n}\n\nexport type CreateSessionResponse = {\n  id: string\n  url: string\n  clientSecret: string\n}\n\nexport const createSessionEndpoint = {\n  method: Method.POST,\n  pathParams: [],\n  queryParams: [],\n  bodyParams: [\n    'clientReferenceId',\n    'metadata',\n    'verificationParams',\n    'avatar',\n    'initialPhrase',\n    'finalPhrase',\n  ],\n  path: (): string => '/identity/verification_sessions',\n} as const\n\ntype GetSessionPathParameters = {\n  sessionId: string\n}\n\nexport const getSessionEndpoint = {\n  method: Method.GET,\n  pathParams: ['sessionId'],\n  queryParams: [],\n  bodyParams: [],\n  path: (p: GetSessionPathParameters): string =>\n    `/identity/verification_sessions/${p.sessionId}`,\n} as const\n"]}